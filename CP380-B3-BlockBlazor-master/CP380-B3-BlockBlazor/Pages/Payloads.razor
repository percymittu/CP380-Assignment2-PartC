@page "/payloads"

@using CP380_B1_BlockList.Models
@using Data

<h3>Pending Transactions</h3>

@if (payloads == null)
{
    <p><em>Loading...</em></p> }
else
{
    <html>
    <body>
        <div class="table-responsive">
            <table class="table">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">TransactionType</th>
                        <th scope="col">Item</th>
                        <th scope="col">Amount</th>
                        <th scope="col">User</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Payload payload in payloads)
                    {
                        <tr>
                            @if (payload == null)
                            {
                                <td scope="row">No Payloads to display</td>

                            }
                            else
                            {


                                <td scope="row">@payload.TransactionType.ToString()</td>
                                <td>@payload.Item</td>
                                <td>@payload.Amount</td>
                                <td>@payload.User</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>

        </div>
        <p></p>

        <p>@submitResponse</p>

        <EditForm Model="@Payload">
            <h3>Add Pending Payloads</h3>
            <hr />

            <div class="container">
                <div class="form-group row">
                    <div class="col-md-12">
                        <label for="firstName" class="form-label">
                            User
                        </label>

                        <InputText id="User" class="form-control" placeholder="User"
                                   @bind-Value="Payload.User" />
                    </div>

                    <div class="col-md-12">
                        <label for="lastName" class="form-label">
                            Transaction Type
                        </label>
                        <InputSelect id="TransactionType" class="form-control" placeholder="Select Transaction Type" @bind-Value="Payload.TransactionType">
                       
                            <option value="3">BUY</option>
                            <option value="1">SELL</option>
                            <option value="2">GRANT</option>
                        </InputSelect>
                    </div>
                
                    <div class="col-md-12">
                        <label for="email" class="form-label">
                            Amount
                        </label>
                        <InputText id="Amount" class="form-control" placeholder="Amount"
                                   @bind-Value="amount" />
                    </div>

                    <div class="col-md-12">
                        <label for="item" class="form-label">
                            Item
                        </label>
                        <InputText id="Item" class="form-control" placeholder="Item"
                                   @bind-Value="Payload.Item" />
                    </div>
                </div>
                <div class="col-md-12">
                    <button class="btn btn-success" @onclick="HandleValidSubmit">
                        Add Payload
                    </button>
                </div>
            </div>
        </EditForm>        
    </body>
</html>

}


<!-- TODO: Add EditForm to submit a new transaction to the server -->


@code { private IEnumerable<Payload> payloads;
    private Payload Payload = new Payload("", 0, 0, "");
    String amount = "";
    private string submitResponse = "";
    PendingTransactionService service = new PendingTransactionService();

    protected override async Task OnInitializedAsync()
    {
        payloads = (await service.ListPayloads()).ToList();
    }

    private async Task HandleValidSubmit()
    {
        Payload.Amount = Convert.ToInt32(amount);
        HttpResponseMessage response = await service.AddPayload(Payload);
        if (response.IsSuccessStatusCode)
        {            
            payloads = (await service.ListPayloads()).ToList();
        }
        else
        {
            submitResponse = response.ReasonPhrase;
        }
    } }
